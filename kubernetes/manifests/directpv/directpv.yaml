apiVersion: v1
kind: Namespace
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
  creationTimestamp: null
  finalizers:
  - foregroundDeletion
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
    pod-security.kubernetes.io/enforce: privileged
  name: directpv
spec: {}
status: {}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
  namespace: directpv

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - patch
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
  - patch
  - update
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - get
  - list
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  - directpv.min.io
  resources:
  - customresourcedefinitions
  - customresourcedefinition
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - directpv.min.io
  resources:
  - directpvdrives
  - directpvvolumes
  - directpvnodes
  - directpvinitrequests
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pod
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - secret
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: directpv-min-io
subjects:
- kind: ServiceAccount
  name: directpv-min-io
  namespace: directpv

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
  namespace: directpv
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
  namespace: directpv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: directpv-min-io
subjects:
- kind: ServiceAccount
  name: directpv-min-io
  namespace: directpv

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.15.0"},"creationTimestamp":"2025-05-26T08:53:26Z","generation":1,"labels":{"directpv.min.io/version":"v1beta1"},"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"k3s","operation":"Update","subresource":"status","time":"2025-05-26T08:53:26Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{}},"f:labels":{".":{},"f:directpv.min.io/version":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-directpv","operation":"Update","time":"2025-05-26T08:53:26Z"}],"name":"directpvdrives.directpv.min.io","resourceVersion":"38277720","uid":"173de2a1-4aac-4882-be22-08d14123cf5b"},"spec":{"conversion":{"strategy":"None"},"group":"directpv.min.io","names":{"kind":"DirectPVDrive","listKind":"DirectPVDriveList","plural":"directpvdrives","singular":"directpvdrive"},"scope":"Cluster","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"DirectPVDrive denotes drive CRD object.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"DriveSpec represents DirectPV drive specification values.","properties":{"relabel":{"type":"boolean"},"unschedulable":{"type":"boolean"}},"type":"object"},"status":{"description":"DriveStatus denotes drive information.","properties":{"allocatedCapacity":{"format":"int64","type":"integer"},"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["type"],"x-kubernetes-list-type":"map"},"freeCapacity":{"format":"int64","type":"integer"},"fsuuid":{"type":"string"},"make":{"type":"string"},"status":{"description":"DriveStatus denotes drive status","type":"string"},"topology":{"additionalProperties":{"type":"string"},"type":"object"},"totalCapacity":{"format":"int64","type":"integer"}},"required":["allocatedCapacity","freeCapacity","fsuuid","status","topology","totalCapacity"],"type":"object"}},"required":["metadata","status"],"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"DirectPVDrive","listKind":"DirectPVDriveList","plural":"directpvdrives","singular":"directpvdrive"},"conditions":[{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"no conflicts found","reason":"NoConflicts","status":"True","type":"NamesAccepted"},{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"the initial names have been accepted","reason":"InitialNamesAccepted","status":"True","type":"Established"}],"storedVersions":["v1beta1"]}}
  creationTimestamp: "2025-05-26T08:53:26Z"
  generation: 1
  labels:
    directpv.min.io/version: v1beta1
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:conditions:
          k:{"type":"Established"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"NamesAccepted"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: k3s
    operation: Update
    subresource: status
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:controller-gen.kubebuilder.io/version: {}
        f:labels:
          .: {}
          f:directpv.min.io/version: {}
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:scope: {}
        f:versions: {}
    manager: kubectl-directpv
    operation: Update
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:kubectl.kubernetes.io/last-applied-configuration: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2025-05-26T09:03:12Z"
  name: directpvdrives.directpv.min.io
  resourceVersion: "38282013"
  uid: 173de2a1-4aac-4882-be22-08d14123cf5b
spec:
  conversion:
    strategy: None
  group: directpv.min.io
  names:
    kind: DirectPVDrive
    listKind: DirectPVDriveList
    plural: directpvdrives
    singular: directpvdrive
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DirectPVDrive denotes drive CRD object.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DriveSpec represents DirectPV drive specification values.
            properties:
              relabel:
                type: boolean
              unschedulable:
                type: boolean
            type: object
          status:
            description: DriveStatus denotes drive information.
            properties:
              allocatedCapacity:
                format: int64
                type: integer
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              freeCapacity:
                format: int64
                type: integer
              fsuuid:
                type: string
              make:
                type: string
              status:
                description: DriveStatus denotes drive status
                type: string
              topology:
                additionalProperties:
                  type: string
                type: object
              totalCapacity:
                format: int64
                type: integer
            required:
            - allocatedCapacity
            - freeCapacity
            - fsuuid
            - status
            - topology
            - totalCapacity
            type: object
        required:
        - metadata
        - status
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: DirectPVDrive
    listKind: DirectPVDriveList
    plural: directpvdrives
    singular: directpvdrive
  conditions:
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.15.0"},"creationTimestamp":"2025-05-26T08:53:26Z","generation":1,"labels":{"directpv.min.io/version":"v1beta1"},"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"k3s","operation":"Update","subresource":"status","time":"2025-05-26T08:53:26Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{}},"f:labels":{".":{},"f:directpv.min.io/version":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-directpv","operation":"Update","time":"2025-05-26T08:53:26Z"}],"name":"directpvvolumes.directpv.min.io","resourceVersion":"38277724","uid":"8b63397c-d195-49e8-9f64-3346f9c43fd6"},"spec":{"conversion":{"strategy":"None"},"group":"directpv.min.io","names":{"kind":"DirectPVVolume","listKind":"DirectPVVolumeList","plural":"directpvvolumes","singular":"directpvvolume"},"scope":"Cluster","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"DirectPVVolume denotes volume CRD object.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"status":{"description":"VolumeStatus denotes volume information.","properties":{"availableCapacity":{"format":"int64","type":"integer"},"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["type"],"x-kubernetes-list-type":"map"},"dataPath":{"type":"string"},"fsuuid":{"type":"string"},"stagingTargetPath":{"type":"string"},"status":{"description":"VolumeStatus represents status of a volume.","type":"string"},"targetPath":{"type":"string"},"totalCapacity":{"format":"int64","type":"integer"},"usedCapacity":{"format":"int64","type":"integer"}},"required":["availableCapacity","dataPath","fsuuid","stagingTargetPath","status","targetPath","totalCapacity","usedCapacity"],"type":"object"}},"required":["metadata","status"],"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"DirectPVVolume","listKind":"DirectPVVolumeList","plural":"directpvvolumes","singular":"directpvvolume"},"conditions":[{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"no conflicts found","reason":"NoConflicts","status":"True","type":"NamesAccepted"},{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"the initial names have been accepted","reason":"InitialNamesAccepted","status":"True","type":"Established"}],"storedVersions":["v1beta1"]}}
  creationTimestamp: "2025-05-26T08:53:26Z"
  generation: 1
  labels:
    directpv.min.io/version: v1beta1
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:conditions:
          k:{"type":"Established"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"NamesAccepted"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: k3s
    operation: Update
    subresource: status
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:controller-gen.kubebuilder.io/version: {}
        f:labels:
          .: {}
          f:directpv.min.io/version: {}
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:scope: {}
        f:versions: {}
    manager: kubectl-directpv
    operation: Update
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:kubectl.kubernetes.io/last-applied-configuration: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2025-05-26T09:03:12Z"
  name: directpvvolumes.directpv.min.io
  resourceVersion: "38282014"
  uid: 8b63397c-d195-49e8-9f64-3346f9c43fd6
spec:
  conversion:
    strategy: None
  group: directpv.min.io
  names:
    kind: DirectPVVolume
    listKind: DirectPVVolumeList
    plural: directpvvolumes
    singular: directpvvolume
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DirectPVVolume denotes volume CRD object.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: VolumeStatus denotes volume information.
            properties:
              availableCapacity:
                format: int64
                type: integer
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              dataPath:
                type: string
              fsuuid:
                type: string
              stagingTargetPath:
                type: string
              status:
                description: VolumeStatus represents status of a volume.
                type: string
              targetPath:
                type: string
              totalCapacity:
                format: int64
                type: integer
              usedCapacity:
                format: int64
                type: integer
            required:
            - availableCapacity
            - dataPath
            - fsuuid
            - stagingTargetPath
            - status
            - targetPath
            - totalCapacity
            - usedCapacity
            type: object
        required:
        - metadata
        - status
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: DirectPVVolume
    listKind: DirectPVVolumeList
    plural: directpvvolumes
    singular: directpvvolume
  conditions:
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.15.0"},"creationTimestamp":"2025-05-26T08:53:26Z","generation":1,"labels":{"directpv.min.io/version":"v1beta1"},"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"k3s","operation":"Update","subresource":"status","time":"2025-05-26T08:53:26Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{}},"f:labels":{".":{},"f:directpv.min.io/version":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-directpv","operation":"Update","time":"2025-05-26T08:53:26Z"}],"name":"directpvnodes.directpv.min.io","resourceVersion":"38277726","uid":"38751e26-0959-43fd-b0ce-3d1ca68b2e61"},"spec":{"conversion":{"strategy":"None"},"group":"directpv.min.io","names":{"kind":"DirectPVNode","listKind":"DirectPVNodeList","plural":"directpvnodes","singular":"directpvnode"},"scope":"Cluster","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"DirectPVNode denotes Node CRD object.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"NodeSpec represents DirectPV node specification values.","properties":{"refresh":{"type":"boolean"}},"type":"object"},"status":{"description":"NodeStatus denotes node information.","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["type"],"x-kubernetes-list-type":"map"},"devices":{"items":{"description":"Device denotes the device information in a drive","properties":{"deniedReason":{"type":"string"},"fsType":{"type":"string"},"fsuuid":{"type":"string"},"id":{"type":"string"},"majorMinor":{"type":"string"},"make":{"type":"string"},"name":{"type":"string"},"size":{"format":"int64","type":"integer"}},"required":["id","majorMinor","name","size"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["devices"],"type":"object"}},"required":["metadata","status"],"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"DirectPVNode","listKind":"DirectPVNodeList","plural":"directpvnodes","singular":"directpvnode"},"conditions":[{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"no conflicts found","reason":"NoConflicts","status":"True","type":"NamesAccepted"},{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"the initial names have been accepted","reason":"InitialNamesAccepted","status":"True","type":"Established"}],"storedVersions":["v1beta1"]}}
  creationTimestamp: "2025-05-26T08:53:26Z"
  generation: 1
  labels:
    directpv.min.io/version: v1beta1
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:conditions:
          k:{"type":"Established"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"NamesAccepted"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: k3s
    operation: Update
    subresource: status
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:controller-gen.kubebuilder.io/version: {}
        f:labels:
          .: {}
          f:directpv.min.io/version: {}
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:scope: {}
        f:versions: {}
    manager: kubectl-directpv
    operation: Update
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:kubectl.kubernetes.io/last-applied-configuration: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2025-05-26T09:03:12Z"
  name: directpvnodes.directpv.min.io
  resourceVersion: "38282016"
  uid: 38751e26-0959-43fd-b0ce-3d1ca68b2e61
spec:
  conversion:
    strategy: None
  group: directpv.min.io
  names:
    kind: DirectPVNode
    listKind: DirectPVNodeList
    plural: directpvnodes
    singular: directpvnode
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DirectPVNode denotes Node CRD object.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NodeSpec represents DirectPV node specification values.
            properties:
              refresh:
                type: boolean
            type: object
          status:
            description: NodeStatus denotes node information.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              devices:
                items:
                  description: Device denotes the device information in a drive
                  properties:
                    deniedReason:
                      type: string
                    fsType:
                      type: string
                    fsuuid:
                      type: string
                    id:
                      type: string
                    majorMinor:
                      type: string
                    make:
                      type: string
                    name:
                      type: string
                    size:
                      format: int64
                      type: integer
                  required:
                  - id
                  - majorMinor
                  - name
                  - size
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            required:
            - devices
            type: object
        required:
        - metadata
        - status
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: DirectPVNode
    listKind: DirectPVNodeList
    plural: directpvnodes
    singular: directpvnode
  conditions:
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.15.0"},"creationTimestamp":"2025-05-26T08:53:26Z","generation":1,"labels":{"directpv.min.io/version":"v1beta1"},"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"k3s","operation":"Update","subresource":"status","time":"2025-05-26T08:53:26Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{}},"f:labels":{".":{},"f:directpv.min.io/version":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-directpv","operation":"Update","time":"2025-05-26T08:53:26Z"}],"name":"directpvinitrequests.directpv.min.io","resourceVersion":"38277728","uid":"8197e748-989b-4e23-9259-cd67efe9043b"},"spec":{"conversion":{"strategy":"None"},"group":"directpv.min.io","names":{"kind":"DirectPVInitRequest","listKind":"DirectPVInitRequestList","plural":"directpvinitrequests","singular":"directpvinitrequest"},"scope":"Cluster","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"DirectPVInitRequest denotes DirectPVInitRequest CRD object.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"InitRequestSpec represents the spec for InitRequest.","properties":{"devices":{"items":{"description":"InitDevice represents the device requested for initialization.","properties":{"force":{"type":"boolean"},"id":{"type":"string"},"name":{"type":"string"}},"required":["force","id","name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["devices"],"type":"object"},"status":{"description":"InitRequestStatus represents the status of the InitRequest.","properties":{"results":{"items":{"description":"InitDeviceResult represents the result of the InitDeviceRequest.","properties":{"error":{"type":"string"},"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"status":{"description":"InitStatus denotes initialization status","type":"string"}},"required":["results","status"],"type":"object"}},"required":["metadata","spec","status"],"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"DirectPVInitRequest","listKind":"DirectPVInitRequestList","plural":"directpvinitrequests","singular":"directpvinitrequest"},"conditions":[{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"no conflicts found","reason":"NoConflicts","status":"True","type":"NamesAccepted"},{"lastTransitionTime":"2025-05-26T08:53:26Z","message":"the initial names have been accepted","reason":"InitialNamesAccepted","status":"True","type":"Established"}],"storedVersions":["v1beta1"]}}
  creationTimestamp: "2025-05-26T08:53:26Z"
  generation: 1
  labels:
    directpv.min.io/version: v1beta1
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:conditions:
          k:{"type":"Established"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"NamesAccepted"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: k3s
    operation: Update
    subresource: status
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:controller-gen.kubebuilder.io/version: {}
        f:labels:
          .: {}
          f:directpv.min.io/version: {}
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:scope: {}
        f:versions: {}
    manager: kubectl-directpv
    operation: Update
    time: "2025-05-26T08:53:26Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:kubectl.kubernetes.io/last-applied-configuration: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2025-05-26T09:03:12Z"
  name: directpvinitrequests.directpv.min.io
  resourceVersion: "38282017"
  uid: 8197e748-989b-4e23-9259-cd67efe9043b
spec:
  conversion:
    strategy: None
  group: directpv.min.io
  names:
    kind: DirectPVInitRequest
    listKind: DirectPVInitRequestList
    plural: directpvinitrequests
    singular: directpvinitrequest
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DirectPVInitRequest denotes DirectPVInitRequest CRD object.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InitRequestSpec represents the spec for InitRequest.
            properties:
              devices:
                items:
                  description: InitDevice represents the device requested for initialization.
                  properties:
                    force:
                      type: boolean
                    id:
                      type: string
                    name:
                      type: string
                  required:
                  - force
                  - id
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            required:
            - devices
            type: object
          status:
            description: InitRequestStatus represents the status of the InitRequest.
            properties:
              results:
                items:
                  description: InitDeviceResult represents the result of the InitDeviceRequest.
                  properties:
                    error:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              status:
                description: InitStatus denotes initialization status
                type: string
            required:
            - results
            - status
            type: object
        required:
        - metadata
        - spec
        - status
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: DirectPVInitRequest
    listKind: DirectPVInitRequestList
    plural: directpvinitrequests
    singular: directpvinitrequest
  conditions:
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2025-05-26T08:53:26Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1

---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
  - Persistent
  - Ephemeral

---
allowVolumeExpansion: true
allowedTopologies:
- matchLabelExpressions:
  - key: directpv.min.io/identity
    values:
    - directpv-min-io
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    directpv.min.io/plugin-version: v4.1.4
  creationTimestamp: null
  finalizers:
  - foregroundDeletion
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: directpv-min-io
parameters:
  csi.storage.k8s.io/fstype: xfs
provisioner: directpv-min-io
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    directpv.min.io/image-tag: v4.1.4
    directpv.min.io/plugin-version: v4.1.4
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: node-server
  namespace: directpv
spec:
  selector:
    matchLabels:
      selector.directpv.min.io: directpv-min-io-apxo2
  template:
    metadata:
      annotations:
        created-by: kubectl-directpv
      creationTimestamp: null
      labels:
        selector.directpv.min.io: directpv-min-io-apxo2
        selector.directpv.min.io.service: enabled
      name: node-server
      namespace: directpv
    spec:
      containers:
      - args:
        - --v=3
        - --csi-address=unix:///csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/directpv-min-io/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: quay.io/minio/csi-node-driver-registrar@sha256:dafc7f667aa2e20d7f059c20db02dd6987c2624d64d8f166cd5930721be98ea9
        name: node-driver-registrar
        resources: {}
        terminationMessagePath: /var/log/driver-registrar-termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
        - mountPath: /registration
          mountPropagation: None
          name: registration-dir
      - args:
        - node-server
        - -v=3
        - --identity=directpv-min-io
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --kube-node-name=$(KUBE_NODE_NAME)
        - --readiness-port=30443
        - --metrics-port=10443
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        image: quay.io/minio/directpv:v4.1.4
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
        name: node-server
        ports:
        - containerPort: 30443
          name: readinessport
          protocol: TCP
        - containerPort: 9898
          name: healthz
          protocol: TCP
        - containerPort: 10443
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: readinessport
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /var/log/driver-termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
        - mountPath: /var/lib/kubelet/plugins
          mountPropagation: Bidirectional
          name: plugins-dir
        - mountPath: /var/lib/directpv/
          mountPropagation: Bidirectional
          name: directpv-common-root
        - mountPath: /var/lib/direct-csi/
          mountPropagation: Bidirectional
          name: direct-csi-common-root
        - mountPath: /sys
          mountPropagation: Bidirectional
          name: sysfs
        - mountPath: /dev
          mountPropagation: HostToContainer
          name: devfs
          readOnly: true
        - mountPath: /run/udev/data
          mountPropagation: Bidirectional
          name: run-udev-data-dir
          readOnly: true
      - args:
        - node-controller
        - -v=3
        - --kube-node-name=$(KUBE_NODE_NAME)
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: quay.io/minio/directpv:v4.1.4
        name: node-controller
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /var/log/driver-termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
        - mountPath: /var/lib/kubelet/plugins
          mountPropagation: Bidirectional
          name: plugins-dir
        - mountPath: /var/lib/directpv/
          mountPropagation: Bidirectional
          name: directpv-common-root
        - mountPath: /var/lib/direct-csi/
          mountPropagation: Bidirectional
          name: direct-csi-common-root
        - mountPath: /sys
          mountPropagation: Bidirectional
          name: sysfs
        - mountPath: /dev
          mountPropagation: HostToContainer
          name: devfs
          readOnly: true
        - mountPath: /run/udev/data
          mountPropagation: Bidirectional
          name: run-udev-data-dir
          readOnly: true
      - args:
        - --csi-address=/csi/csi.sock
        - --health-port=9898
        image: quay.io/minio/livenessprobe@sha256:783010e10e4d74b6b2b157a4b52772c5a264fd76bb2ad671054b8c3f706c8324
        name: liveness-probe
        resources: {}
        terminationMessagePath: /var/log/driver-liveness-termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
      hostPID: true
      serviceAccountName: directpv-min-io
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/directpv-min-io
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: DirectoryOrCreate
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: DirectoryOrCreate
        name: plugins-dir
      - hostPath:
          path: /var/lib/directpv/
          type: DirectoryOrCreate
        name: directpv-common-root
      - hostPath:
          path: /var/lib/direct-csi/
          type: DirectoryOrCreate
        name: direct-csi-common-root
      - hostPath:
          path: /sys
          type: DirectoryOrCreate
        name: sysfs
      - hostPath:
          path: /dev
          type: DirectoryOrCreate
        name: devfs
      - hostPath:
          path: /run/udev/data
          type: DirectoryOrCreate
        name: run-udev-data-dir
  updateStrategy:
    type: RollingUpdate
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    directpv.min.io/image-tag: v4.1.4
    directpv.min.io/plugin-version: v4.1.4
  creationTimestamp: null
  labels:
    application-name: directpv.min.io
    application-type: CSIDriver
    directpv.min.io/created-by: kubectl-directpv
    directpv.min.io/version: v1beta1
  name: controller
  namespace: directpv
spec:
  replicas: 3
  selector:
    matchLabels:
      selector.directpv.min.io: controller-us24k
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        created-by: kubectl-directpv
      creationTimestamp: null
      labels:
        selector.directpv.min.io: controller-us24k
      name: controller
      namespace: directpv
    spec:
      containers:
      - args:
        - --v=3
        - --timeout=300s
        - --csi-address=$(CSI_ENDPOINT)
        - --leader-election
        - --feature-gates=Topology=true
        - --strict-topology
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        image: quay.io/minio/csi-provisioner@sha256:fc1f992dd5591357fa123c396aaadaea5033f312b9c136a11d62cf698474bebb
        name: csi-provisioner
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /var/log/controller-provisioner-termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
      - args:
        - --v=3
        - --timeout=300s
        - --csi-address=$(CSI_ENDPOINT)
        - --leader-election
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        image: quay.io/minio/csi-resizer@sha256:58fa627393f20892b105a137d27e236dfaec233a3a64980f84dcb15f38c21533
        name: csi-resizer
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /var/log/controller-csi-resizer-termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
      - args:
        - controller
        - --identity=directpv-min-io
        - -v=3
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --kube-node-name=$(KUBE_NODE_NAME)
        - --readiness-port=30443
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        image: quay.io/minio/directpv:v4.1.4
        name: controller
        ports:
        - containerPort: 30443
          name: readinessport
          protocol: TCP
        - containerPort: 9898
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: readinessport
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /csi
          mountPropagation: None
          name: socket-dir
      serviceAccountName: directpv-min-io
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/controller-controller
          type: DirectoryOrCreate
        name: socket-dir
status: {}

---
