argo-cd:
  global:
    revisionHistoryLimit: 1
    domain: argocd.nullservers.com
    securityContext:
      runAsUser: 1000
      fsGroup: 1000
      runAsGroup: 1000
    nodeSelector:
      kubernetes.io/hostname: pi
  configs:
    cm:
      timeout.hard.reconciliation: 1m
      resource.ignoreResourceUpdatesEnabled: "true"
    params:
      controller.status.processors: 1
      controller.opertation.processors: 1
      controller.self.heal.timeout.seconds: 120
      server.insecure: true
      server.disable.auth: false
      reposerverver.parallelism.limit: 5
      controller.resource.health.persist: true
  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 30s
        scrapeTimeout: 10s
  dex:
    enabled: false
  redis:
    enabled: false
  redis-ha:
    enabled: false
  externalRedis:
    host: redis-headless.redis.svc.cluster.local
  redisSecretInit:
    enabled: false
  server:
    certificate:
      enabled: false
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 30s
        scrapeTimeout: 10s
    ingress:
      enabled: false # Manually setup
  repoServer:
    replicas: 1
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 30s
        scrapeTimeout: 10s
  applicationSet:
    enabled: false
    replicas: 0
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 30s
        scrapeTimeout: 10s
  notifications:
    enabled: false