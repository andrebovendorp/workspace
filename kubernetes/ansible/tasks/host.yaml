- name: Create the directory configurations
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - /etc/systemd/system/kubelet.service.d/  # kubelet configuration file
    - /etc/kubernetes/pki/etcd/               # cert files
    - /etc/containerd/                        # containerd folder
    - /etc/apt/keyrings/                      # apt keyrings

- name: Disable swap temporarily
  command: swapoff -a

- name: Remove swap entries from /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^(.*\s+swap\s+.*)$'
    replace: '# \1'
  notify: Reboot if necessary

- name: Verify swap is disabled
  shell: free -h | grep -i swap
  register: swap_status
  ignore_errors: true

- name: Create the directory configurations
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - /tmp/{{ inventory_hostname }}           # Kubeadm init file
    - /etc/containerd

- name: Install Dependencies
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https 
    - ca-certificates 
    - curl
    - gpg
    - containerd
    - net-tools 
  
- name: Reload systemd daemon and enable containerd
  shell: |
    systemctl daemon-reload
    systemctl enable --now containerd
  
- name: Ensure /etc/apt/keyrings directory exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes GPG key
  shell: |
    # sudo mkdir -p -m 755 /etc/apt/keyrings
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

- name: Configure k8s apt
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    state: present

- name: Install Kubernetes related Dependencies
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: 
    - kubeadm
    - kubelet
    - kubectl

- name: Setup CRI
  copy:
    dest: /etc/containerd/config.toml
    content: |
      [plugins]
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
    owner: root
    group: root
    mode: '0644'

- name: Enable ipv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes